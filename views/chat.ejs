<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>DM</title>
    <!-- cdn -->
    <!-- <script src="/socket.io/socket.io.js"></script> -->
    <script src="https://cdn.socket.io/4.7.2/socket.io.min.js" integrity="sha384-mZLF4UVrpi/QTWPA7BjNPEnkIfRFn4ZEO3Qt/HFklTJBj/gBOV8G3HcKn4NfQblz" crossorigin="anonymous"></script>    
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


  <style>
    #body {
      width: 100%;
      height: 70vh;
      position: relative;
      background: #8ae4bc;
    }

    #chat {
      position: absolute;
      bottom: 0px;
      display: flex;
      justify-content: space-between;
      width: 100%;
    }

    #chat input {
      width: 80%;
    }

    .my-chat {
      display: flex;
      justify-content: end;
      padding: 2px 0px;
    }

    .my-chat p {
      margin: 0;
      padding: 10px;
      background: yellow;
      border-radius: 10px;
      margin-right: 10px;
    }

    .other-chat {
      display: flex;
      justify-content: start;
      padding: 2px 0px;
    }

    .other-chat p {
      margin: 0;
      padding: 10px;
      background: white;
      border-radius: 10px;
      margin-left: 10px;
    }

    #notice {
      display: flex;
      flex-direction: column;
      text-align: center;
      color: gray;
    }

    #notice p {
      margin: 0;
    }

    .secret-chat p {
      background: pink;
    }
  </style>
</head>

<body>
  <div id="main">
    <form id="room">

      <input type="text" id="roomName" placeholder="채팅방 만들기" value="<%= room %>" />
      <input type="text" id="userName" placeholder="사용자 이름 입력" value="<%= myNickname %>" />
      <input type="text" id="userid_num" placeholder="사용자 이름 입력" value="<%= userid_num %>" />
      <button type="submit" id="btn">만들기</button>
    </form>

    <ul id="lists"></ul>
  </div>

  <div id="body" hidden>

    <div id="msg">
      <div id="notice"></div>
      <% for(let i=0; i < chats.length; i++) {  %>
        <% if(myNickname === chats[i].from_nick){ %>
      <div class="my-chat"><p class="mychatTime"><%= chats[i].createdAt %></p><p><%= chats[i].dm_content %></p>

      </div>
      <!-- <div class="my-chat"></div> -->
      <% } else { %>
        <div class="other-chat"><p><%= chats[i].from_nick %></p>
          <p><%= chats[i].dm_content %></p>
          <p class="otherchatTime"><%= chats[i].createdAt %></p>

        </div>
        <!-- <div class="other-chat"></div> -->
      <% } %>
      <% } %>
    </div>

    <form id="chat">
      <input type="text" id="message" placeholder="메세지 입력" />
      <button>입력</button>
    </form>

  </div>

  <script>
    window.onload = async function () {
        // 버튼 요소를 찾아서 클릭 이벤트 발생
        var myButton = document.getElementById("btn");
        myButton.click();
        // await axios({
        //   method: "get",
        //   url: `/chat/<%= room %>`,
        // }).then(res => {
        //   console.log(res);
        // })
        // console.log("가나요?");
      };

    const socket = io({ transports: ["websocket"], upgrade: false });
    const roomForm = document.querySelector('#room');
    const chatForm = document.querySelector('#chat');
    const msg = document.querySelector('#msg');
    const notice = document.querySelector('#notice');

    let myName;
    let enter;

    // //룸리스트 < ===== 룰 리스트로 나오는데 li가 아니라 div로 roomList가 나온다
    // socket.on('roomList', (roomLists) => {
    //   console.log(roomLists);
    //   const lists = document.querySelector('#lists');
    //   lists.textContent = '';
    //   roomLists.forEach((roomList) => {
    //     const li = document.createElement('li');
    //     li.textContent = `${roomList} 와 닉네임 입력 후 입장`;
    //     lists.appendChild(li);
    //   });
    // });

    //메세지 띄우기
    socket.on('newMessage', (message, nick) => {
      const div = document.createElement('div');
      const p = document.createElement('p');
      if (myName === nick) {
        //내가입력한 텍스트
        div.classList.add('my-chat');
        div.innerHTML = `<p class="mychatTime">${message.createdAt}</p>`
      } else {
        div.classList.add('other-chat');
        div.innerHTML = `<p class="mychatTime">${message.createdAt}</p>`
      }

      console.log("chat message >>>>>>>>>>>>>",message);
      //채팅 텍스트
      if (myName === nick) {
        p.textContent = `${message.dm_content} `;
        div.appendChild(p);
        msg.appendChild(div);
      } else {
        p.textContent = `${nick} : ${message.dm_content}`;
        div.appendChild(p);
        msg.appendChild(div);
      }
    });
    //입장 메세지 이벤트
    socket.on('notice', (message) => {
      // 한번 입장 했었으면 다시 안뜨게
      if(enter !== message){
        enter = message;
        const div = document.createElement('div');
        const p = document.createElement('p');
        p.textContent = message;
        div.appendChild(p);
        notice.appendChild(div);
      }
    });

    ///폼 이벤트
    roomForm.addEventListener('submit', (e) => {
      e.preventDefault();
      socket.emit('create', roomName.value, userName.value, () => {
        const main = document.querySelector('#main');
        const body = document.querySelector('#body');
        main.hidden = true;
        body.hidden = false;
        //전역변수에 입력한 닉네임을 저장
        myName = userName.value;
      });
    });

    chatForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const message = document.querySelector('#message');
      console.log("myName >>>>>", myName);
      const msg = {
        room: `<%= room %>`,
        from_nick: myName,
        message: message.value,
        userid_num: `<%= userid_num %>`,
      };
      console.log("chat msg from nick >>>>>>", msg.from_nick);
      socket.emit('sendMessage', msg, myName);
      message.value = '';
    });

  </script>
</body>

</html>
